package com.shopfloor.backend.database.objects;

import jakarta.persistence.*;
import jakarta.validation.constraints.Min;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;

import java.util.Date;

/**
 * Entity representing an item in the database.
 * Contains details about the item, including its name, description, time required, creator, timestamps, and ordering index.
 * @author David Todorov (https://github.com/david-todorov)
 */
@Entity
@Table(name = "items")
@Setter
@Getter
public class ItemDBO {

    /**
     * Unique identifier for the item.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Setter(AccessLevel.NONE)
    private Long id;

    /**
     * Name of the item.
     * Cannot be null.
     */
    @Column(name = "name", nullable = false, length = 255)
    private String name;

    /**
     * Description of the item.
     * Stored as a text column in the database.
     */
    @Column(name = "description", columnDefinition = "TEXT")
    private String description;

    /**
     * Time required to complete the item, in minutes.
     * Must be at least 1 minute.
     */
    @Column(name = "time_required")
    @Min(value = 1)
    private Integer timeRequired;

    /**
     * ID of the user who created the item.
     */
    @Column(name = "created_by")
    private Long createdBy;

    /**
     * ID of the user who last updated the item.
     */
    @Column(name = "updated_by")
    private Long updatedBy;

    /**
     * Timestamp when the item was created.
     * Cannot be null and is not updatable.
     */
    @Column(name = "created_at", nullable = false, updatable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdAt;

    /**
     * Timestamp when the item was last updated.
     */
    @Column(name = "updated_at")
    @Temporal(TemporalType.TIMESTAMP)
    private Date updatedAt;

    /**
     * The ordering index of the item.
     * Used to determine the order of items.
     */
    @Column(name = "ordering_index")
    private Integer orderingIndex;

}
